{
  "id": "429fe3c22bbff2d415f455c5ada73057",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.7.6",
  "solcLongVersion": "0.7.6+commit.7338295f",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/openzeppelin/contracts/mocks/BadBeacon.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\ncontract BadBeaconNoImpl {\n}\n\ncontract BadBeaconNotContract {\n    function implementation() external pure returns (address) {\n        return address(0x1);\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/openzeppelin/contracts/mocks/BadBeacon.sol": {
        "BadBeaconNoImpl": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122004ddf2b74e850afa5cfc0e98f29e00e14e0d29cd1ffd38a25d6d6f718a64bd7f64736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0xDD CALLCODE 0xB7 0x4E DUP6 EXP STATICCALL 0x5C 0xFC 0xE SWAP9 CALLCODE SWAP15 STOP 0xE1 0x4E 0xD 0x29 0xCD 0x1F REVERT CODESIZE LOG2 0x5D PUSH14 0x6F718A64BD7F64736F6C63430007 MOD STOP CALLER ",
              "sourceMap": "66:28:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600080fdfea264697066735822122004ddf2b74e850afa5cfc0e98f29e00e14e0d29cd1ffd38a25d6d6f718a64bd7f64736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0xDD CALLCODE 0xB7 0x4E DUP6 EXP STATICCALL 0x5C 0xFC 0xE SWAP9 CALLCODE SWAP15 STOP 0xE1 0x4E 0xD 0x29 0xCD 0x1F REVERT CODESIZE LOG2 0x5D PUSH14 0x6F718A64BD7F64736F6C63430007 MOD STOP CALLER ",
              "sourceMap": "66:28:0:-:0;;;;;"
            },
            "methodIdentifiers": {}
          }
        },
        "BadBeaconNotContract": {
          "abi": [
            {
              "inputs": [],
              "name": "implementation",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b50608a8061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635c60da1b14602d575b600080fd5b6033604f565b604080516001600160a01b039092168252519081900360200190f35b60019056fea2646970667358221220d40b8d44658a355d40cae8d43f7a6f611c4eb36e0748cc06eccbfd773f6c880964736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8A DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C60DA1B EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x4F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x1 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 SIGNEXTEND DUP14 DIFFICULTY PUSH6 0x8A355D40CAE8 0xD4 EXTCODEHASH PUSH27 0x6F611C4EB36E0748CC06ECCBFD773F6C880964736F6C6343000706 STOP CALLER ",
              "sourceMap": "96:132:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b506004361060285760003560e01c80635c60da1b14602d575b600080fd5b6033604f565b604080516001600160a01b039092168252519081900360200190f35b60019056fea2646970667358221220d40b8d44658a355d40cae8d43f7a6f611c4eb36e0748cc06eccbfd773f6c880964736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C60DA1B EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x4F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x1 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 SIGNEXTEND DUP14 DIFFICULTY PUSH6 0x8A355D40CAE8 0xD4 EXTCODEHASH PUSH27 0x6F611C4EB36E0748CC06ECCBFD773F6C880964736F6C6343000706 STOP CALLER ",
              "sourceMap": "96:132:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;132:94;;;:::i;:::-;;;;-1:-1:-1;;;;;132:94:0;;;;;;;;;;;;;;;215:3;132:94;:::o"
            },
            "methodIdentifiers": {
              "implementation()": "5c60da1b"
            }
          }
        }
      }
    },
    "sources": {
      "contracts/openzeppelin/contracts/mocks/BadBeacon.sol": {
        "ast": {
          "absolutePath": "contracts/openzeppelin/contracts/mocks/BadBeacon.sol",
          "exportedSymbols": {
            "BadBeaconNoImpl": [
              2
            ],
            "BadBeaconNotContract": [
              14
            ]
          },
          "id": 15,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".0",
                "<",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:31:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2,
              "linearizedBaseContracts": [
                2
              ],
              "name": "BadBeaconNoImpl",
              "nodeType": "ContractDefinition",
              "nodes": [],
              "scope": 15,
              "src": "66:28:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 14,
              "linearizedBaseContracts": [
                14
              ],
              "name": "BadBeaconNotContract",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 12,
                    "nodeType": "Block",
                    "src": "190:36:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307831",
                              "id": 9,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "215:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "0x1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 8,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "207:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "207:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "207:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "functionReturnParameters": 6,
                        "id": 11,
                        "nodeType": "Return",
                        "src": "200:19:0"
                      }
                    ]
                  },
                  "functionSelector": "5c60da1b",
                  "id": 13,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "implementation",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "155:2:0"
                  },
                  "returnParameters": {
                    "id": 6,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "181:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "181:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "180:9:0"
                  },
                  "scope": 14,
                  "src": "132:94:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 15,
              "src": "96:132:0"
            }
          ],
          "src": "33:196:0"
        },
        "id": 0
      }
    }
  }
}
